# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'crcfsandbox'
  imageRepository: 'springazuredemo'
  containerRegistry: 'crcfsandbox.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/microservice1/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'anantaguhaimgpull-auth'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'microservice1/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'clean install'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    
    - task: KubernetesManifest@0
      displayName: Create imagePullSecret
      inputs:
        action: createSecret
        secretName: $(imagePullSecret)
        dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
        kubernetesServiceConnection: akspoc-rg-it-sandbox-00
    - task: KubernetesManifest@0
      displayName: deployK8S
      inputs:
        action: deploy
        kubernetesServiceConnection: akspoc-rg-it-sandbox-00
        namespace: "default"
        containers: |
          anantaguha.azurecr.io/springazuredemo:latest
        manifests: |
           $(Build.SourcesDirectory)/manifests/deployment.yml
        imagePullSecrets: $(imagePullSecret)
